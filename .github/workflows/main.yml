name: Create Unity Package

on: push

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      suffix: ${{steps.suffix.outputs.suffix}}
    steps:
      - run: |
          echo GITHUB_REF=$GITHUB_REF
          echo REF_NAME=${GITHUB_REF##*/}
      - id: suffix
        run: echo "::set-output name=suffix::$(echo ${GITHUB_REF##*/})"
  build:
    needs: prebuild
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          find Assets/ -name \*.meta >> metaList
          mkdir build
          cp -r README.md LICENSE build
          cp README.md build/README.txt
          cat metaList

      - uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'build/EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}.unitypackage'
          include-files: metaList

      - uses: actions/upload-artifact@master
        with:
          path: build
          name: EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}

  release:
    runs-on: ubuntu-latest
    needs:
      - prebuild
      - build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@master
        with:
          path: EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}
          name: EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          path: EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}
          filename: 'EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}.zip'
          # exclusions: '*.git* /*node_modules/* .editorconfig'

      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: 'EsnyaUnityTools-${{needs.prebuild.outputs.suffix}}.zip'
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
